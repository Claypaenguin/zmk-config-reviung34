/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen {
        // 34 keys.
        zmk,matrix-transform = &dual_1u_transform;

        // 33 keys. Center two thumb keys replaced by a single 2u key. Remember to adjust your
        // keymap accordingly!
        // zmk,matrix-transform = &single_2u_transform;
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

default_layer {
            bindings = <
&kp Q  &kp W  &kp E  &kp R    &kp T         &kp Y      &kp U    &kp I      &kp O    &kp P
&kp A  &kp S  &kp D  &kp F    &kp G         &kp H      &kp J    &kp K      &kp L    &kp BACKSLASH
&kp Z  &kp X  &kp C  &kp V    &kp B         &kp N      &kp M    &kp COMMA  &kp DOT  &kp FSLH
                     &mo EXT  &kp LSHIFT    &kp SPACE  &mo SYM
            >;
        };

        ext_layer {
            bindings = <
&kp ESC    &none      &none       &none      &none       &kp PG_UP     &kp HOME  &kp UP    &kp END    &kp CAPSLOCK
&sk LALT   &sk LGUI   &sk LSHIFT  &sk LCTRL  &sk RALT    &kp PG_DN     &kp LEFT  &kp DOWN  &kp RIGHT  &kp DEL
&kp LG(Z)  &kp LG(X)  &kp LG(C)   &kp LG(V)  &none       &kp LA(BSPC)  &kp BSPC  &kp TAB   &none      &kp PSCRN
                                  &none      &none       &kp ENTER     &mo FN
            >;
        };

        sym_layer {
            bindings = <
&kp EXCL          &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp DLLR       &kp PRCNT    &kp LA(N7)      &kp LA(E)   &kp LA(L)   &kp NON_US_BSLH   &kp LS(NON_US_BSLH)
&sk LALT          &sk LGUI          &sk LSHIFT        &sk LCTRL      &sk RALT     &kp LS(N7)      &kp RS(N8)  &kp LA(N8)  &kp LA(N5)        &kp GRAVE
&kp LS(NUMBER_6)  &kp LS(MINUS)     &kp EQUAL         &kp LS(EQUAL)  &kp LA(N)    &kp LS(LA(N7))  &kp RS(N9)  &kp LA(N9)  &kp LA(NUMBER_6)  &kp LS(GRAVE)
                                                      &mo FN         &mo NUM      &none           &none
            >;
        };

        fn_layer {
            bindings = <
&kp C_PREV  &kp C_PP      &kp C_NEXT       &none      &none    &kp F12  &kp F7  &kp F8  &kp F9  &none
&sk LALT    &sk LGUI      &sk LSHIFT       &sk LCTRL  &none    &kp F11  &kp F4  &kp F5  &kp F6  &none
&kp C_MUTE  &kp C_VOL_DN  &kp C_VOLUME_UP  &none      &none    &kp F10  &kp F1  &kp F2  &kp F3  &none
                                           &none      &none    &none    &none
            >;
        };

        num_layer {
            bindings = <
&none     &none     &none       &none      &none    &kp KP_EQUAL     &kp N7  &kp N8  &kp N9  &kp KP_PLUS
&sk LALT  &sk LGUI  &sk LSHIFT  &sk LCTRL  &none    &kp KP_MULTIPLY  &kp N4  &kp N5  &kp N6  &kp KP_MINUS
&none     &none     &none       &none      &none    &kp N0           &kp N1  &kp N2  &kp N3  &kp KP_DIVIDE
                                &none      &none    &none            &none
            >;
        };

        set_layer {
            bindings = <
&bootloader  &none  &none  &bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 3  &none  &none  &none  &bootloader
&none        &none  &none  &none       &bt BT_SEL 1    &bt BT_SEL 4  &none  &none  &none  &none
&none        &none  &none  &none       &bt BT_SEL 2    &bt BT_SEL 5  &none  &none  &none  &none
                           &none       &none           &none         &none
            >;
        };

        acc_layer {
            bindings = <
&none             &none      &none  &none  &none    &none  &kp LBKT  &none  &kp SEMI  &none
&kp SINGLE_QUOTE  &kp MINUS  &none  &none  &none    &none  &none     &none  &none     &none
&none             &none      &none  &none  &none    &none  &none     &none  &none     &none
                                    &none  &none    &none  &none
            >;
        };

        default_layer_win {
            bindings = <
&kp Q  &kp W  &kp E  &kp R  &kp T         &kp Y      &kp U  &kp I      &kp O    &kp P
&kp A  &kp S  &kp D  &kp F  &kp G         &kp H      &kp J  &kp K      &kp L    &kp BACKSLASH
&kp Z  &kp X  &kp C  &kp V  &kp B         &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH
                     &mo 8  &kp LSHIFT    &kp SPACE  &mo 9
            >;
        };

        ext_layer_win {
            bindings = <
&kp ESC    &none      &none       &none      &none       &kp PG_UP     &kp HOME  &kp UP    &kp END    &kp CAPSLOCK
&sk LALT   &sk LGUI   &sk LSHIFT  &sk LCTRL  &sk RALT    &kp PG_DN     &kp LEFT  &kp DOWN  &kp RIGHT  &kp DEL
&kp LC(Z)  &kp LC(X)  &kp LC(C)   &kp LC(V)  &none       &kp LA(BSPC)  &kp BSPC  &kp TAB   &none      &kp PSCRN
                                  &none      &none       &kp ENTER     &mo FN
            >;
        };

        sym_layer_win {
            bindings = <
&kp EXCL          &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp DLLR       &kp PRCNT    &kp LA(N7)      &kp LA(E)   &kp LA(L)   &kp NON_US_BSLH   &kp NON_US_HASH
&sk LALT          &sk LGUI          &sk LSHIFT        &sk LCTRL      &sk RALT     &kp LS(N7)      &kp RS(N8)  &kp LA(N8)  &kp LA(N5)        &kp GRAVE
&kp LS(NUMBER_6)  &kp LS(MINUS)     &kp EQUAL         &kp LS(EQUAL)  &kp LA(N)    &kp LS(LA(N7))  &kp RS(N9)  &kp LA(N9)  &kp LA(NUMBER_6)  &kp LS(GRAVE)
                                                      &mo FN         &mo NUM      &none           &none
            >;
        };
    };
};
